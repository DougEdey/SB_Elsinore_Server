import * as React from 'react';
import { Action } from '../Labelled';
import { Error } from '../../types';
export declare type Option = string | {
    value: string;
    label: string;
    disabled?: boolean;
};
export interface Group {
    /** Title for the group */
    title: string;
    /** List of options */
    options: Option[];
}
export interface BaseProps {
    /** List of options to choose from */
    options?: Option[];
    /** List of option groups to choose from */
    groups?: (Group | Option)[];
    /** Label for the select */
    label: string;
    /** Adds an action to the label */
    labelAction?: Action;
    /** Visually hide the label */
    labelHidden?: boolean;
    /** Disable input */
    disabled?: boolean;
    /** Additional text to aide in use */
    helpText?: React.ReactNode;
    /** Example text to display as placeholder */
    placeholder?: string;
    /** ID for form input */
    id?: string;
    /** Name for form input */
    name?: string;
    /** Value for form input */
    value?: string;
    /** Display an error state */
    error?: Error;
    /** Callback when selection is changed */
    onChange?(selected: string, id: string): void;
    /** Callback when select is focussed */
    onFocus?(): void;
    /** Callback when focus is removed */
    onBlur?(): void;
}
export interface Props extends BaseProps {
}
export default function Select({ id, name, groups, options, labelHidden, labelAction, helpText, label, error, value, placeholder, disabled, onChange, onFocus, onBlur, }: Props): JSX.Element;
