import { Option } from '../../../Select';
export interface AppliedFilter {
    key: string;
    value: string;
    label?: string;
}
export declare enum FilterType {
    Select = 0,
    TextField = 1
}
export interface FilterBase<FilterKeys = {}> {
    label: string;
    key: keyof FilterKeys | string;
    operatorText?: string;
    type: FilterType;
}
export interface FilterSelect<FilterKeys = {}> extends FilterBase<FilterKeys> {
    type: FilterType.Select;
    options: Option[];
}
export interface FilterTextField<FilterKeys = {}> extends FilterBase<FilterKeys> {
    type: FilterType.TextField;
}
export declare type Filter<FilterKeys = {}> = FilterSelect<FilterKeys> | FilterTextField<FilterKeys>;
