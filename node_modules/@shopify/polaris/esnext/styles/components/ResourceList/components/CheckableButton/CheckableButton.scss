@import '../../variables';

$button-vertical-padding: (
    resource-list(button-min-height) - line-height(body) - rem(2px)
  ) / 2;
$control-size: rem(16px);
$chekbox-label-margin: rem(20px);

.p_tm {
  @include text-style-button;
  display: inline-flex;
  align-items: center;
  min-height: resource-list(button-min-height);
  min-width: resource-list(button-min-height);
  margin: 0;
  padding: $button-vertical-padding spacing();
  line-height: 1;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  flex: 1 1 0;
  text-align: left;
  background: color('white');
  border: border(dark);
  border-radius: border-radius() 0 0 border-radius();
  border-right-color: transparent;

  &.p_f9 {
    font-size: font-size(button);
    font-weight: 700;

    // simulates measuring with an additional digit (e.g. 00 instead of 0)
    &::before {
      content: '';
      display: inline-block;
      width: font-size(button);
    }
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    flex: 0 1 auto;

    &:only-child {
      border-radius: border-radius();
      border: border(dark);
    }
  }

  &:hover,
  &:active {
    border-right-color: transparent;
  }

  &:focus {
    outline: none;
  }

  &.p_kg {
    border: border(transparent);
    border-radius: border-radius();
  }

  &.p_rv {
    @include text-emphasis-subdued;
    font-weight: 600;
  }

  &.p_ti {
    color: color('indigo');

    @include breakpoint-after(resource-list(breakpoint-small)) {
      border-color: color('sky', 'dark');
    }
  }
}

.p_s7 {
  pointer-events: none;
  height: $control-size;
  width: $control-size;
  margin-left: (-1 * (spacing(tight) + rem(1px))); // 1px accounts for border
}

.p_bk {
  margin-left: $chekbox-label-margin;
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  // padding to fix the bottom of letters being cutoff by overflow: hidden
  padding: rem(1px) 0;
}
