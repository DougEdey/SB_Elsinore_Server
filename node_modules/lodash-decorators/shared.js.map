{"version":3,"file":"shared.js","sourceRoot":"","sources":["src/shared.ts"],"names":[],"mappings":"","sourcesContent":["import { DecoratorConfig, ResolvableFunction } from './factory';\n\nexport interface DebounceOptions {\n  wait?: number;\n  leading?: boolean;\n  trailing?: boolean;\n  maxWait?: number;\n}\n\nexport interface ApplicateOptions {\n  config: DecoratorConfig;\n  target: any;\n  value: any;\n  args: any[];\n  instance?: Object;\n}\n\nexport interface ThrottleOptions {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport interface MemoizeMap<T, U> {\n  get(key: T): U;\n  has(key: T): boolean;\n  set(key: T, value: U): void;\n  delete(key: T): void;\n  clear?(): void;\n}\n\nexport interface MemoizeConfig<T, U> {\n  resolver?: ResolvableFunction;\n  type?: { new (...args: any[]): MemoizeMap<T, U> };\n  cache?: MemoizeMap<T, U>;\n}"]}