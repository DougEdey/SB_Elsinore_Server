{"version":3,"file":"negate.js","sourceRoot":"","sources":["src/negate.ts"],"names":[],"mappings":";;AAAA,sCAAyC;AAEzC,qCAKmB;AACnB,6CAAuD;AAEvD,IAAM,SAAS,GAAG,0BAAgB,CAAC,uBAAuB,CACxD,IAAI,yBAAe,CAAC,MAAM,EAAE,IAAI,oCAAsB,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAC9E,CAAC;AAEF,gBAAuB,EAAuB;IAC5C,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACvB,CAAC;AAFD,wBAEC;AACkB,wBAAM;AACzB,kBAAe,SAAS,CAAC","sourcesContent":["import negate = require('lodash/negate');\n\nimport {\n  DecoratorConfig,\n  DecoratorFactory,\n  LodashDecorator,\n  ResolvableFunction\n} from './factory';\nimport { PartialValueApplicator } from './applicators';\n\nconst decorator = DecoratorFactory.createInstanceDecorator(\n  new DecoratorConfig(negate, new PartialValueApplicator(), { property: true })\n);\n\nexport function Negate(fn?: ResolvableFunction): LodashDecorator {\n  return decorator(fn);\n}\nexport { Negate as negate };\nexport default decorator;\n"]}