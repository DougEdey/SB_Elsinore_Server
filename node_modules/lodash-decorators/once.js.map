{"version":3,"file":"once.js","sourceRoot":"","sources":["src/once.ts"],"names":[],"mappings":";;AAAA,kCAAqC;AAErC,qCAAqF;AACrF,6CAAmD;AAEnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,uBAAuB,CACxD,IAAI,yBAAe,CAAC,IAAI,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CACtE,CAAC;AAEF;IACE,MAAM,CAAC,SAAS,EAAE,CAAC;AACrB,CAAC;AAFD,oBAEC;AACgB,oBAAI;AACrB,kBAAe,SAAS,CAAC","sourcesContent":["import once = require('lodash/once');\n\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\nimport { PreValueApplicator } from './applicators';\n\nconst decorator = DecoratorFactory.createInstanceDecorator(\n  new DecoratorConfig(once, new PreValueApplicator(), { setter: true })\n);\n\nexport function Once(): LodashMethodDecorator {\n  return decorator();\n}\nexport { Once as once };\nexport default decorator;\n"]}