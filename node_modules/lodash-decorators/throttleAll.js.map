{"version":3,"file":"throttleAll.js","sourceRoot":"","sources":["src/throttleAll.ts"],"names":[],"mappings":";;AAAA,0CAA6C;AAE7C,qCAAqF;AACrF,6CAAmD;AAGnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,QAAQ,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAC1E,CAAC;AACF,qBAA4B,IAAa,EAAE,OAAyB;IAClE,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAFD,kCAEC;AACuB,kCAAW;AACnC,kBAAe,SAAS,CAAC","sourcesContent":["import throttle = require('lodash/throttle');\n\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\nimport { PreValueApplicator } from './applicators';\nimport { ThrottleOptions } from './shared';\n\nconst decorator = DecoratorFactory.createDecorator(\n  new DecoratorConfig(throttle, new PreValueApplicator(), { setter: true })\n);\nexport function ThrottleAll(wait?: number, options?: ThrottleOptions): LodashMethodDecorator {\n  return decorator(wait, options);\n}\nexport { ThrottleAll as throttleAll };\nexport default decorator;\n"]}