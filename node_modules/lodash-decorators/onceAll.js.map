{"version":3,"file":"onceAll.js","sourceRoot":"","sources":["src/onceAll.ts"],"names":[],"mappings":";;AAAA,kCAAqC;AAErC,qCAAqF;AACrF,6CAAmD;AAEnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,IAAI,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CACtE,CAAC;AAEF;IACE,MAAM,CAAC,SAAS,EAAE,CAAC;AACrB,CAAC;AAFD,0BAEC;AACmB,0BAAO;AAC3B,kBAAe,SAAS,CAAC","sourcesContent":["import once = require('lodash/once');\n\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\nimport { PreValueApplicator } from './applicators';\n\nconst decorator = DecoratorFactory.createDecorator(\n  new DecoratorConfig(once, new PreValueApplicator(), { setter: true })\n);\n\nexport function OnceAll(): LodashMethodDecorator {\n  return decorator();\n}\nexport { OnceAll as onceAll };\nexport default decorator;\n"]}