{"version":3,"file":"tap.js","sourceRoot":"","sources":["src/tap.ts"],"names":[],"mappings":";;AAAA,qCAAqF;AACrF,6CAAmD;AACnD,iCAAwC;AAExC,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,UAAC,EAAY,IAAK,OAAA,qBAAa,CAAC,EAAE,EAAE,CAAC,CAAC,EAApB,CAAoB,EAAE,IAAI,gCAAkB,EAAE,CAAC,CACtF,CAAC;AAEF;;;GAGG;AACH;IACE,MAAM,CAAC,SAAS,EAAE,CAAC;AACrB,CAAC;AAFD,kBAEC;AACe,kBAAG;AACnB,kBAAe,SAAS,CAAC","sourcesContent":["import { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\nimport { PreValueApplicator } from './applicators';\nimport { returnAtIndex } from './utils';\n\nconst decorator = DecoratorFactory.createDecorator(\n  new DecoratorConfig((fn: Function) => returnAtIndex(fn, 0), new PreValueApplicator())\n);\n\n/**\n * Returns the first argument from the function regardless of\n * the decorated functions return value.\n */\nexport function Tap(): LodashMethodDecorator {\n  return decorator();\n}\nexport { Tap as tap };\nexport default decorator;\n"]}