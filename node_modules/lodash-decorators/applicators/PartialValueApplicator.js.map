{"version":3,"file":"PartialValueApplicator.js","sourceRoot":"","sources":["../src/applicators/PartialValueApplicator.ts"],"names":[],"mappings":";;;AAAA,8CAAiD;AAEjD,2CAA4D;AAC5D,kCAA2C;AAE3C;IAA4C,kDAAU;IAAtD;;IAcA,CAAC;IAbC,sCAAK,GAAL,UAAM,EAA8D;YAA5D,cAAI,EAAE,kBAAM,EAAE,gBAAK,EAAY,2BAAO;QAC5C,MAAM,CAAC;YAAS,oBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,+BAAoB;;YAClC,IAAI,EAAE,GAAG,KAAK,CAAC;YACf,IAAI,QAAQ,GAAG,CAAC,CAAC;YAEjB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpB,EAAE,GAAG,uBAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;gBAC5C,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;YAED,MAAM,CAAC,OAAO,gBAAC,EAAE,SAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAE,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACtE,CAAC,CAAA;IACH,CAAC;IACH,6BAAC;AAAD,CAAC,AAdD,CAA4C,uBAAU,GAcrD;AAdY,wDAAsB","sourcesContent":["import isFunction = require('lodash/isFunction');\n\nimport { Applicator, ApplicateOptions } from './Applicator';\nimport { resolveFunction } from '../utils';\n\nexport class PartialValueApplicator extends Applicator {\n  apply({ args, target, value, config: { execute } }: ApplicateOptions): any {\n    return function(...invokeArgs: any[]): any {\n      let fn = value;\n      let argIndex = 0;\n\n      if (!isFunction(fn)) {\n        fn = resolveFunction(args[0], this, target);\n        argIndex = 1;\n      }\n\n      return execute(fn, ...args.slice(argIndex)).apply(this, invokeArgs);\n    }\n  }\n}\n"]}