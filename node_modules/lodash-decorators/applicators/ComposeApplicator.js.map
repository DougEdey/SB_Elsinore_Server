{"version":3,"file":"ComposeApplicator.js","sourceRoot":"","sources":["../src/applicators/ComposeApplicator.ts"],"names":[],"mappings":";;;AAAA,0CAA6C;AAE7C,2CAA4D;AAC5D,kCAA2C;AAE3C;IAAuC,6CAAU;IAC/C,2BAAoB,OAAgC;QAAhC,wBAAA,EAAA,YAAgC;QAApD,YACE,iBAAO,SACR;QAFmB,aAAO,GAAP,OAAO,CAAyB;;IAEpD,CAAC;IAED,sBAAI,mCAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAED,iCAAK,GAAL,UAAM,EAAyE;YAA7D,2BAAO,EAAI,aAAgB,EAAhB,qCAAgB,EAAE,cAAI,EAAE,kBAAM;QACzD,IAAM,UAAU,GAAG,IAAI,CAAC;QAExB,MAAM,CAAC;YAAA,iBAYN;YAZe,oBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,+BAAoB;;YAClC,IAAM,KAAK,GACN,IAAI,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,uBAAe,CAAC,MAAM,EAAE,KAAI,EAAE,MAAM,CAAC,EAArC,CAAqC,CAAC,QAC7D,CAAC;YAEF,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBACpB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,OAAO,eAAI,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AA1BD,CAAuC,uBAAU,GA0BhD;AA1BY,8CAAiB","sourcesContent":["import identity = require('lodash/identity');\n\nimport { Applicator, ApplicateOptions } from './Applicator';\nimport { resolveFunction } from '../utils';\n\nexport class ComposeApplicator extends Applicator {\n  constructor(private _config: { post?: boolean } = {}) {\n    super();\n  }\n\n  get post(): boolean {\n    return this._config.post === true;\n  }\n\n  apply({ config: { execute }, value = identity, args, target }: ApplicateOptions): any {\n    const applicator = this;\n\n    return function(...invokeArgs: any[]): any {\n      const _args = [\n        ...args.map(method => resolveFunction(method, this, target))\n      ];\n\n      if (applicator.post) {\n        _args.push(value);\n      } else {\n        _args.unshift(value);\n      }\n\n      return execute(..._args).apply(this, invokeArgs);\n    };\n  }\n}\n"]}